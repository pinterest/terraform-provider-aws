name: Build and Publish to Registry

on:
  schedule:
    - cron: '0 01 * * *' # Everyday at 1am
  push:
    branches: ["sanjay/release_pipeline"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Read and update provider version
        id: get_version
        run: |
          echo "VERSION=$(cat pinterest-version.txt)" >> $GITHUB_ENV
          NEW_VERSION=$(cat pinterest-version.txt | awk -F. -v OFS=. '{$NF++; print}')
          echo $NEW_VERSION > pinterest-version.txt

      - name: Set up Go environment
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: go.mod

      - name: Build for Linux AMD64
        env:
          GOOS: linux
          GOARCH: amd64
        run: go build -o terraform-provider-aws-linux

      - name: Build for Mac AMD64
        env:
          GOOS: darwin
          GOARCH: amd64
        run: go build -o terraform-provider-aws-mac

      - name: Push Linux Binary to Artifactory
        env:
          ARTIFACTORY_ENV: prod
          ARTIFACTORY_REGION: use1
        run: |
          artifactory-push generic \
          --env $ARTIFACTORY_ENV \
          --region $ARTIFACTORY_REGION \
          --props "OS=Linux;Arch=amd64" \
          --src ./terraform-provider-aws-linux \
          --target terraform-providers-prod-local/terraform-provider-aws_v${{ env.VERSION }}

      - name: Push Mac Binary to Artifactory
        env:
          ARTIFACTORY_ENV: prod
          ARTIFACTORY_REGION: use1
        run: |
          artifactory-push generic \
          --env $ARTIFACTORY_ENV \
          --region $ARTIFACTORY_REGION \
          --props "OS=Mac;Arch=amd64" \
          --src ./terraform-provider-aws-mac \
          --target terraform-providers-prod-local/terraform-provider-aws_v${{ env.VERSION }}
